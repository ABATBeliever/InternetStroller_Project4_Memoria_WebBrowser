// InternetStroller Memoria iniSystem.hsp
// from https://dev.onionsoft.net/seed/info.ax?id=2367
// Made by 木製ナット
// include only
// (読み込み専用になるよう、変更、編集、削除機能を省いています)

#ifndef ini_set
#module "ini_module_system_m"
#define global ini_set(%1 = 1024 , %2 = 64) deffunc_ini_set %1 , %2
#deffunc deffunc_ini_set int p1 , int p2
	ini_ret = 1
	ini_set_complete = 0
	ini_set_section_max = 0
	if p1 > 0{
		sdim ini_data , p1 , p2
		sdim ini_section_name , 64 , p2
		sdim ini_str_tmp , 64
		dim ini_parameter_cnt , p2
		dim ini_comment_cnt , p2
		ini_ret = 0
		ini_index = -1
		ini_section_cnt = 1
		ini_section_select = 0
		ini_section_name(0) = "Main"
		ini_section_max = p2
		ini_set_complete = p1
	}
return ini_ret
#define global ini_load(%1 = "config.ini") deffunc_ini_load %1
#deffunc deffunc_ini_load str p1
	if ini_set_complete = 0 : ini_set
	ini_ret = 1
	ini_space_tmp_switch = 0
	if strlen(p1) > 0{
		exist p1
		if strsize > 0{
			sdim ini_file_data_tmp , strsize
			notesel ini_file_data_tmp
			noteload p1
			ini_notemax_tmp = notemax
			ini_section_cnt = 1
			ini_index = 0
			ini_section_name(0) = "Main"
			noteunsel
			notesel ini_data(0)
			repeat ini_notemax_tmp
				getstr ini_str_tmp , ini_file_data_tmp , ini_index
				ini_index += strsize
				if strmid(ini_str_tmp , 0 , 1) = "[" & strmid(ini_str_tmp , strlen(ini_str_tmp) - 1 , 1) = "]"{
					if ini_space_tmp_switch : notedel notemax - 1
					ini_section_name(ini_section_cnt) = strmid(ini_str_tmp , 1 , strlen(ini_str_tmp) - 2)
					noteunsel
					notesel ini_data(ini_section_cnt)
					ini_section_cnt ++
				}else{
					if ini_str_tmp != ""{
						ini_space_tmp_switch = 0
						if strmid(ini_str_tmp , 0 , 1) = ";"{
							ini_comment_cnt(ini_section_cnt) ++
						}else{
							ini_parameter_cnt(ini_section_cnt) ++
						}
					}else{
						ini_space_tmp_switch = 1
					}
					noteadd ini_str_tmp
				}
			loop
			noteunsel
			ini_ret = 0
			ini_index = -1
		}
	}
return ini_ret
#define global ini_file_section_cnt(%1 = "config.ini") deffunc_ini_file_section_cnt(%1)
#defcfunc deffunc_ini_file_section_cnt str p1
	ini_ret = -1
	if strlen(p1) > 0{
		exist p1
		if strsize > 0{
			sdim ini_file_data_tmp , strsize
			sdim ini_str_tmp , 64
			notesel ini_file_data_tmp
			noteload p1
			ini_notemax_tmp = notemax
			ini_index = 0
			ini_ret = 1
			noteunsel
			repeat ini_notemax_tmp
				getstr ini_str_tmp , ini_file_data_tmp , ini_index
				ini_index += strsize
				if strmid(ini_str_tmp , 0 , 1) = "[" & strmid(ini_str_tmp , strlen(ini_str_tmp) - 1 , 1) = "]"{
					ini_ret ++
				}
			loop
			ini_index = -1
		}
	}
return ini_ret
#define global ini_section_sel(%1 = "Main") deffunc_ini_section_sel %1
#deffunc deffunc_ini_section_sel str p1
	if ini_set_complete = 0 : ini_set
	ini_ret = -1
	if strlen(p1) > 0{
		repeat ini_section_cnt
			if ini_section_name(cnt) = p1{
				ini_section_select = cnt
				ini_ret = cnt
				break
			}
		loop
	}
return ini_ret
#define global ini_section_sel_id(%1 = 0) deffunc_ini_section_sel_id %1
#deffunc deffunc_ini_section_sel_id int p1
	if ini_set_complete = 0 : ini_set
	ini_str_tmp = ""
	if p1 >= 0 & p1 < ini_section_cnt{
		ini_section_select = p1
		ini_str_tmp = ini_section_name(p1)
	}
return ini_str_tmp
#define global ctype ini_section_get_name(%1 = 0) defcfunc_ini_section_get_name(%1)
#defcfunc defcfunc_ini_section_get_name int p1
	if ini_set_complete = 0 : ini_set
	ini_str_tmp = ""
	if p1 >= 0 & p1 < ini_section_cnt{
		ini_str_tmp = ini_section_name(p1)
	}
return ini_str_tmp
#define global ctype ini_section_get_id(%1 = "Main") defcfunc_ini_section_get_id(%1)
#defcfunc defcfunc_ini_section_get_id str p1
	if ini_set_complete = 0 : ini_set
	ini_ret = -1
	if strlen(p1) > 0{
		repeat ini_section_cnt
			if ini_section_name(cnt) = p1{
				ini_ret = cnt
				break
			}
		loop
	}
return ini_str_tmp
#define global ctype ini_section_info(%1) defcfunc_ini_section_info(%1)
#define global ini_section_info_name defcfunc_ini_section_info(0)
#define global ini_section_info_id defcfunc_ini_section_info(1)
#define global ini_section_info_cnt defcfunc_ini_section_info(2)
#define global ini_section_info_max defcfunc_ini_section_info(3)
#define global ini_section_info_prm defcfunc_ini_section_info(4)
#define global ini_section_info_com defcfunc_ini_section_info(5)
#defcfunc defcfunc_ini_section_info int p1
	if ini_set_complete = 0 : ini_set
	ini_ret = -1
	switch p1
	case 0
		ini_ret = -2
	swbreak
	case 1
		ini_ret = ini_section_select
	swbreak
	case 2
		ini_ret = ini_section_cnt
	swbreak
	case 3
		ini_ret = ini_section_max
	swbreak
	case 4
		ini_ret = ini_parameter_cnt(ini_section_select)
	swbreak
	case 5
		ini_ret = ini_comment_cnt(ini_section_cnt)
	swbreak
	swend
	if ini_ret = -2{
		ini_ret = -1
		return ini_section_name(ini_section_select)
	}
return ini_ret
#define global ini_get(%1 , %2) deffunc_ini_get %1 , %2
#deffunc deffunc_ini_get str p1 , var p2
	if ini_set_complete = 0 : ini_set
	ini_ret = 1
	if strlen(p1) > 0{
		notesel ini_data(ini_section_select)
		ini_index = notefind(p1 + "=" , 1)
		if ini_index >= 0{
			noteget ini_str_tmp , ini_index
			ini_str_tmp = strmid(ini_str_tmp , instr(ini_str_tmp , 0 , "=") + 1 , strlen(ini_str_tmp) - instr(ini_str_tmp , 0 , "="))
			switch vartype(p2)
			case 2
				p2 = ini_str_tmp
				ini_ret = 0
			swbreak
			case 3
				p2 = double(ini_str_tmp)
				ini_ret = 0
			swbreak
			case 4
				p2 = int(ini_str_tmp)
				ini_ret = 0
			swbreak
			swend
		}
		noteunsel
	}
return ini_ret
#define global ctype ini_find(%1) defcfunc_ini_find(%1)
#defcfunc defcfunc_ini_find str p1
	if ini_set_complete = 0 : ini_set
	ini_ret = -1
	if strlen(p1) > 0{
		notesel ini_data(ini_section_select)
		ini_ret = notefind(p1 + "=" , 1)
		noteunsel
	}
return ini_ret
#global
#endif
