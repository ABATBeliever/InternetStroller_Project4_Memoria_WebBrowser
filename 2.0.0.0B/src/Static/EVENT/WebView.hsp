*EVENT_TITLE
	gosub *EVENT_URL
	pView = wparam : gosub *TAB_UPDATE
	return

*EVENT_COMPLETE
	gosub *EVENT_URL
	pView = wparam : gosub *TAB_UPDATE
	return

*EVENT_FULLSCR	//フルスクリーン
	return/*
	gosub *TAB_GETINFO
	gosub *EVENT_URL
	if ( pTabInfo == 0 ){ return }
	if ( dpCtrl(1) != wparam ){ return }
	if ( CCall2(dpCtrl(1), WV2_GetFullScreen, 1, varptr(p1)) ){ return }
	if ( p1 ){
		ShowWindow hEditUrl, 0
		ShowWindow hTab, 0
		wndInfo(0) = GetWindowLong(hWnd0, -20)
		wndInfo(1) = GetWindowLong(hWnd0, -16)
		wndInfo(2) = GetMenu(hWnd0)
		SetMenu hWnd0, 0
		if ( WebView2_GetWndRect(hWnd0, rc) == 0 ){ return }
		wndInfo(3) = rc(0), rc(1), rc(2), rc(3)
		SetWindowLong hWnd0, -20, 0
		SetWindowLong hWnd0, -16, wndInfo(1) & 0xff000000
		if ( WebView2_GetMonitorRect(hWnd0, rc) == 0 ){ return }
		SetWindowPos hWnd0, -1, rc(0), rc(1), rc(2), rc(3), 0x220
		if getSini("IsEnableDPI")=0 {WebView2_Size dpCtrl(0), 0, 0, rc(2), rc(3)-25-(DPISETPOS*2)}	//DPIなら調整
		clrobj 0,6	//便利ボタンを消す
		clrobj 0,7
	}
	else {
		ShowWindow hEditUrl, 5
		ShowWindow hTab, 5
		SetWindowLong hWnd0, -20, wndInfo(0)
		SetWindowLong hWnd0, -16, wndInfo(1)
		if ( wndInfo(2) ){ SetMenu hWnd0, wndInfo(2) }
		if ( wndInfo(0) & 0x8 ){ p1 = -1 } else { p1 = -2 }
		SetWindowPos hWnd0, p1, wndInfo(3), wndInfo(4), wndInfo(5), wndInfo(6), 0x220
		ShowWindow hWnd0, 1
		DoSetButton	//再設定
		pos 120,25:input frontURL,ginfo(12),30,0
		hFrontURL = objinfo(stat, 2)
	}*/
	return

*EVENT_NEWWND
	gosub *EVENT_URL
	if ( lparam == 0 || bAdd != 0 ){ return }
	bAdd = 1
	pNewWnd = lparam
	if ( CCall2(pNewWnd, WV2NewWnd_GetDeferral, 1, varptr(pDef)) == 0 ){
		PostMessage hWnd0, 0x9004, 0, 0
		bAdd = 1
	}
	return

*EVENT_NEWWND2
	gosub *EVENT_URL
	if ( CCall2(pNewWnd, WV2NewWnd_put_Handled, 1, 1) == 0 ){
		if ( CCall2(pNewWnd, WV2NewWnd_get_Uri, 1, varptr(p1)) == 0 ){
			gosub *TAB_ADD2
			ret = CCall2(pNewWnd, WV2NewWnd_put_NewWindow, 1, curView)
			gosub *EVENT_SET
			gosub *TAB_SELECT
		}
	}
	ret = CCall2(pDef, WV2Deferral_Complete, 0)
	WebView2_Release pDef
	bAdd = 0
	return

*EVENT_SET
	pTabInfo = 0
	pTabInfo = HeapAlloc(GetProcessHeap(), 8, WV2_DATA_SIZE * 28 + 8)
	if ( pTabInfo == 0 ){ return }
	dupptr dp, pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_TITLECHANGED, hWnd0, 0x9000, dp
	ret = CCall2(curView, WV2_add_DocumentTitleChanged, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 4 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_NAVIGATIONCOMPLETED, hWnd0, 0x9001, dp
	ret = CCall2(curView, WV2_add_NavigationCompleted, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 8 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_FULLSCREEN, hWnd0, 0x9002, dp
	ret = CCall2(curView, WV2_add_FullScrChanged, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 12 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_NEWWINDOW, hWnd0, 0x9003, dp
	ret = CCall2(curView, WV2_add_NewWindowRequested, 2, dp, varptr(dp(6)))

	dupptr dpCtrl, WV2_DATA_SIZE * 28 + pTabInfo, 8, 4
	dpCtrl(0) = curCtrl, curView

	tci(0) = 8 : tci(6) = pTabInfo
	sendmsg hTab, TCM_SETITEMW, iTab, varptr(tci)
	return

*EVENT_URL
	if ( pTabInfo == 0 ){ return }
	p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
	sdim bufTmp, p1
	GetWindowText hEditUrl, varptr(bufTmp), p1
	urlTmp = bufTmp
	return