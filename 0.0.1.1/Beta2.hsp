//InternetStroller WebView

//ビルド時用設定
#packopt version "Definition.dll"
//#packopt icon "ISimg.ico"

//以降ブラウザそのもののコード
ISVersion="Beta2"
ISBuildNumber="86"
ISBuildDay="2022/12/23"
title "InternetStroller WebView Version : "+ISVersion+" - Initial Variable"
screen 0, 1200,600

//OSバージョン把握
title "InternetStroller WebView Version : "+ISVersion+" - Understanding OS Version"
if sysinfo(0) = "WindowsNT ver5.1" {
	dialog "WebView doesn't support Windows XP"
	end
	}
if sysinfo(0) = "WindowsNT ver5.2" {
	dialog "WebView doesn't support Windows Server 2003 / ReactOS"
	end
	}
if sysinfo(0) = "WindowsNT ver6.0" {
	dialog "WebView doesn't support Windows Vista / Windows Server 2008"
	end
	}

//Dllファイル確認
//WebView2Loader.dll
exist dirinfo(1) + "\\WebView2Loader.dll"
if strsize = -1 {
	title "WebView2Loader.dll not found"
	dialog "WebView2Loader.dll not found.\nPlease get it from the URL below.\n\nWebView2Loader.dllを、下記URLから取得してください\n\nWebView : https://www.nuget.org/api/v2/package/Microsoft.Web.WebView2/1.0.1418.22", 1, "WebView2Loader.dll not found"
	end
}
//Definition.dll
exist dirinfo(1) + "\\Definition.dll"
if strsize = -1 {
	title "Definition.dll not found"
	dialog "Definition.dll not found\nThis is a required file at build time, and you can continue in the meantime\nY: Continue\nN: Exit\n\nDefinion.dll が見つかりません。\nこれは、ビルド時に必要なファイルなので、一応続行はできます。\nY:続行\nN: 終了", 3, "Definition.dll not found"
	if stat=7{
	end
}
}
//IS_WebView_mod.dll
exist dirinfo(1) + "\\IS_WebView_mod.dll"
if strsize = -1 {
	title "IS_WebView_mod.dll not found"
	dialog "Unable to continue because IS_WebView_mod.dll is missing.\n\nIS_WebView_mod.dllが見つからないため、続行不能です", 1, "IS_WebView_mod.dll not found"
	end
}
//ここからWebView開始
title "InternetStroller WebView Version : "+ISVersion+" - Loading WebView"
#include "IS_WebView_mod.dll"
#define global DEF_URL "https://ntp.msn.com/edge/ntp?locale=ja&title=新規タブ"
#define global WV2Env_CreateWV2Ctrl           3
#define global WV2Ctrl_put_IsVisible          4
#define global WV2Ctrl_put_Bounds             6
#define global WV2Ctrl_GetParent             21
#define global WV2_PrintToPdf                80
#define global WV2_IsDownloadDialogOpen      90
#define global WV2_OpenDownloadDialog        91
#define global WV2_CloseDownloadDialog       92
#define global WV2NewWnd_get_Uri              3
#define global WV2NewWnd_put_NewWindow        4
#define global WV2NewWnd_put_Handled          6
#define global WV2NewWnd_GetDeferral          9
#define global WV2Deferral_Complete           3
#define global WV2Ctrl_Close                 24
#define global WV2Ctrl_get_CoreWebView2      25
#define global WV2_get_Source                 4
#define global WV2_Navigate                   5
#define global WM_SETFONT  0x0030
#define global TCM_GETITEMCOUNT  0x1304
#define global TCM_GETITEMA      0x1305
#define global TCM_INSERTITEMA   0x1307
#define global WV2_ExecuteScript             29
#define global WV2_CapturePreview            30
#define global WV2_Reload                    31
#define global WV2_get_CanGoBack             38
#define global WV2_get_CanGoForward          39
#define global WV2_get_GoBack                40
#define global WV2_get_GoForward             41
#define global WV2_add_NewWindowRequested    44
#define global WV2_del_NewWindowRequested    45
#define global WV2_add_DocumentTitleChanged  46
#define global WV2_del_DocumentTitleChanged  47
#define global WV2_get_DocumentTitle         48
#define global WV2_add_FullScrChanged        52
#define global TCM_DELETEITEM    0x1308
#define global TCM_GETCURSEL     0x130b
#define global TCM_SETCURSEL     0x130c
#define global TCM_HITTEST       0x130d
#define global TCM_SETITEMW      0x133d
#define global TCM_INSERTITEMW   0x133e
#define global WV2_add_NavigationCompleted   15
#define global WV2_del_NavigationCompleted   16
#define global WV2_del_FullScrChanged        53
#define global WV2_GetFullScreen             54
#define global WV2_OpenTaskManagerWindow     79

//Win32API
title "InternetStroller WebView Version : "+ISVersion+" - CreateMenu"
	WebView2_InitWnd 0
	hWnd0 = hwnd
	dim wndInfo, 7
	hMenu = CreateMenu()
	menuBuf(0) = "戻る", "進む", "読込直し", "URLへ"
	menuBuf(4) = "タブ追加", "タブ閉じる", "バージョン情報" ,"画像取得"
	menuBuf(8) = "IS互換", "ダウンロード履歴", ""
	repeat length(menuBuf)
		InsertMenu hMenu, -1, 0x400, 0x8000 + cnt, menuBuf(cnt)
	loop
	dim mi, 12 : mi = 48, 1 : mi(3) = 3
	SetMenu hWnd0, hMenu
	ldim lbCmd, length(menuBuf)
	lbCmd(0) = *CMD_BACK, *CMD_FORWARD, *CMD_RELOAD, *CMD_NAVIGATE
	lbCmd(4) = *CMD_NEW_TAB, *CMD_DEL_TAB, *CMD_VERSION, *CMD_CAPTURE
	lbCmd(8) = *CMD_Compatible, *CMD_DOWNLOAD, *Debug_Window
	CreateWindowExA 0, "edit", 0, 0x56000080, 0, 0, 0, 0, hWnd0, 0, hinstance, 0
	hEditUrl = stat : sendmsg hEditUrl, WM_SETFONT, hFont, 1
	bufTmp = DEF_URL : SetWindowTextA hEditUrl, varptr(bufTmp)
	dim rc, 4 : dim tci, 7 : bAdd = 0 : bDel = 0
	CreateWindowExA 0, "SysTabControl32", 0, 0x56008468, 0, 0, 0, 0, hWnd0, 0, hinstance, 0
	hTab = stat : sendmsg hTab, WM_SETFONT, hFont, 1
	p1 = 0 << 16 : p1 |= 160 : sendmsg hTab, 0x1329, 0, p1
	pEnv = WebView2_CreateEnv()
	if ( pEnv == 0 ){ dialog "Err WebView2_CreateEnv \n WebViewの展開に失敗しました \n 書き込み権限をご確認ください", 1, "FATAL" : end }
	curCtrl = 0 : curView = 0

//パス通すやつ
	oncmd gosub *EVENT_TITLE,    0x9000
	oncmd gosub *EVENT_COMPLETE, 0x9001
	oncmd gosub *EVENT_FULLSCR,  0x9002
	oncmd gosub *EVENT_NEWWND,   0x9003
	oncmd gosub *EVENT_NEWWND2,  0x9004
	oncmd gosub *WM_SIZE,        0x0005
	oncmd gosub *WM_CLOSE,       0x0010
	oncmd gosub *WM_NOTIFY,      0x004E
	oncmd gosub *WM_COMMAND,     0x0111
	gosub *TAB_ADD
	onexit *ISWindowExit
	title "InternetStroller WebView Version : "+ISVersion+" - Sucsess"
	stop

//以降 "*" 処理
*MENU_UPDATE
	mi(1) = 1
	if ( CCall2(dpCtrl(1), WV2_get_CanGoBack, 1, varptr(p1)) == 0 ){
		if ( p1 ){ mi(3) = 0 }
		else { mi(3) = 3 }
	}
	else { mi(3) = 3 }
	SetMenuItemInfo hMenu, 0, 1, varptr(mi)
	if ( CCall2(dpCtrl(1), WV2_get_CanGoForward, 1, varptr(p1)) == 0 ){
		if ( p1 ){ mi(3) = 0 }
		else { mi(3) = 3 }
	}
	else { mi(3) = 3 }
	SetMenuItemInfo hMenu, 1, 1, varptr(mi)
	DrawMenuBar hWnd0
	return

*TAB_GETINFO
	sendmsg hTab, TCM_GETCURSEL, 0, 0 : iTab = stat
	gosub *TAB_GETINFO2
	return

*TAB_GETINFO2
	pTabInfo = 0
	if ( iTab == -1 ){ return }
	tci(0) = 8 : sendmsg hTab, TCM_GETITEMA, iTab, varptr(tci)
	if ( stat == 0 ){ return }
	pTabInfo = tci(6)
	dupptr dpCtrl, WV2_DATA_SIZE * 28 + pTabInfo, 8, 4
	return

*TAB_SELECT
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	pView = -1 : gosub *TAB_UPDATE
	gosub *WM_SIZE
	ret = CCall2(dpCtrl, WV2Ctrl_put_IsVisible, 1, 1)
	return

*TAB_UPDATE
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	gosub *MENU_UPDATE
	if ( CCall2(dpCtrl(1), WV2_get_DocumentTitle, 1, varptr(p1)) == 0 ){
		if ( pView == -1 || pView == dpCtrl(1) ){ SetWindowTextW hWnd0, p1 }
		tci(0) = 1 : tci(3) = p1
		sendmsg hTab, TCM_SETITEMW, iTab, varptr(tci)
		CoTaskMemFree p1
	}
	if ( pView == -1 || pView == dpCtrl(1) ){
		if ( CCall2(dpCtrl(1), WV2_get_Source, 1, varptr(p1)) == 0 ){
			SetWindowTextW hEditUrl, p1
			CoTaskMemFree p1
		}
	}
	return

*TAB_ADD
	if ( bAdd ){ return }
	bAdd = 1
	gosub *TAB_ADD2
	gosub *EVENT_SET
	gosub *TAB_SELECT
	bufTmp = DEF_URL
	SetWindowTextA hEditUrl, varptr(bufTmp)
	gosub *CMD_NAVIGATE
	bAdd = 0
	return

*TAB_ADD2
	gosub *TAB_GETINFO
	if ( pTabInfo ){
		ret = CCall2(dpCtrl, WV2Ctrl_put_IsVisible, 1, 0)
	}
	sendmsg hTab, TCM_GETITEMCOUNT, 0, 0 : iTab = stat
	tci(0) = 9 : tci(6) = 0
	bufTmp = "Title不明" : tci(3) = varptr(bufTmp)
	sendmsg hTab, TCM_INSERTITEMA, iTab, varptr(tci)
	sendmsg hTab, TCM_SETCURSEL, iTab, 0
	curCtrl = WebView2_CreateCtrl(pEnv, hWnd0)
	curView = WebView2_GetView(curCtrl)
	if ( curCtrl == 0 || curView == 0 ){
		gosub *TAB_DEL
		return
	}
	return

*TAB_DEL
	sendmsg hTab, TCM_GETITEMCOUNT, 0, 0
	if ( stat <= 1 ){ return }
	if ( bDel ){ return }
	bDel = 1
	gosub *TAB_GETINFO2
	if ( pTabInfo == 0 ){ return }
	ret = CCall2(dpCtrl(0), WV2Ctrl_Close, 0)
	WebView2_Release dpCtrl(1)
	WebView2_Release dpCtrl(0)
	HeapFree GetProcessHeap(), 0, pTabInfo
	sendmsg hTab, TCM_DELETEITEM, iTab, 0
	if ( iTab ){ iTab-- }
	sendmsg hTab, TCM_SETCURSEL, iTab, 0
	gosub *TAB_SELECT
	bDel = 0
	return

*EVENT_TITLE
	pView = wparam : gosub *TAB_UPDATE
	return

*EVENT_COMPLETE
	pView = wparam : gosub *TAB_UPDATE
	return

*EVENT_FULLSCR
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	if ( dpCtrl(1) != wparam ){ return }
	if ( CCall2(dpCtrl(1), WV2_GetFullScreen, 1, varptr(p1)) ){ return }
	if ( p1 ){
		ShowWindow hEditUrl, 0
		ShowWindow hTab, 0
		wndInfo(0) = GetWindowLong(hWnd0, -20)
		wndInfo(1) = GetWindowLong(hWnd0, -16)
		wndInfo(2) = GetMenu(hWnd0)
		SetMenu hWnd0, 0
		if ( WebView2_GetWndRect(hWnd0, rc) == 0 ){ return }
		wndInfo(3) = rc(0), rc(1), rc(2), rc(3)
		SetWindowLong hWnd0, -20, 0
		SetWindowLong hWnd0, -16, wndInfo(1) & 0xff000000
		if ( WebView2_GetMonitorRect(hWnd0, rc) == 0 ){ return }
		SetWindowPos hWnd0, -1, rc(0), rc(1), rc(2), rc(3), 0x220
	}
	else {
		ShowWindow hEditUrl, 5
		ShowWindow hTab, 5
		SetWindowLong hWnd0, -20, wndInfo(0)
		SetWindowLong hWnd0, -16, wndInfo(1)
		if ( wndInfo(2) ){ SetMenu hWnd0, wndInfo(2) }
		if ( wndInfo(0) & 0x8 ){ p1 = -1 } else { p1 = -2 }
		SetWindowPos hWnd0, p1, wndInfo(3), wndInfo(4), wndInfo(5), wndInfo(6), 0x220
		ShowWindow hWnd0, 1
	}
	return

*EVENT_NEWWND
	if ( lparam == 0 || bAdd != 0 ){ return }
	bAdd = 1
	pNewWnd = lparam
	if ( CCall2(pNewWnd, WV2NewWnd_GetDeferral, 1, varptr(pDef)) == 0 ){
		PostMessage hWnd0, 0x9004, 0, 0
		bAdd = 1
	}
	return

*EVENT_NEWWND2
	if ( CCall2(pNewWnd, WV2NewWnd_put_Handled, 1, 1) == 0 ){
		if ( CCall2(pNewWnd, WV2NewWnd_get_Uri, 1, varptr(p1)) == 0 ){
			gosub *TAB_ADD2
			ret = CCall2(pNewWnd, WV2NewWnd_put_NewWindow, 1, curView)
			gosub *EVENT_SET
			gosub *TAB_SELECT
		}
	}
	ret = CCall2(pDef, WV2Deferral_Complete, 0)
	WebView2_Release pDef
	bAdd = 0
	return

*EVENT_SET
	pTabInfo = 0
	pTabInfo = HeapAlloc(GetProcessHeap(), 8, WV2_DATA_SIZE * 28 + 8)
	if ( pTabInfo == 0 ){ return }
	dupptr dp, pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_TITLECHANGED, hWnd0, 0x9000, dp
	ret = CCall2(curView, WV2_add_DocumentTitleChanged, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 4 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_NAVIGATIONCOMPLETED, hWnd0, 0x9001, dp
	ret = CCall2(curView, WV2_add_NavigationCompleted, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 8 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_FULLSCREEN, hWnd0, 0x9002, dp
	ret = CCall2(curView, WV2_add_FullScrChanged, 2, dp, varptr(dp(6)))

	dupptr dp, WV2_DATA_SIZE * 12 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_NEWWINDOW, hWnd0, 0x9003, dp
	ret = CCall2(curView, WV2_add_NewWindowRequested, 2, dp, varptr(dp(6)))

	dupptr dpCtrl, WV2_DATA_SIZE * 28 + pTabInfo, 8, 4
	dpCtrl(0) = curCtrl, curView

	tci(0) = 8 : tci(6) = pTabInfo
	sendmsg hTab, TCM_SETITEMW, iTab, varptr(tci)
	return

*CMD_BACK
	gosub *TAB_GETINFO
	if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_get_GoBack, 0) }
	return

*CMD_FORWARD
	gosub *TAB_GETINFO
	if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_get_GoForward, 0) }
	return

*CMD_RELOAD
	gosub *TAB_GETINFO
	if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_Reload, 0) }
	return

*CMD_NAVIGATE
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
	sdim bufTmp, p1
	GetWindowTextW hEditUrl, varptr(bufTmp), p1
	ret = CCall2(dpCtrl(1), WV2_Navigate, 1, varptr(bufTmp))
	return

*CMD_NEW_TAB
	gosub *TAB_ADD
	return

*CMD_DEL_TAB
	gosub *TAB_DEL
	return

*CMD_VERSION
    dialog " InternetStroller WebView \n \n Version : " + ISVersion + " \n 制作 : ABATBeliever \n ビルド番号 : " + ISBuildNumber + "\n ビルド日時 :" + ISBuildDay + "\n\n これはベータ版です", 1, "About"
	return

*CMD_CAPTURE
	dialog "png", 17
	if ( stat == 0 ){ return }
	if ( SHCreateStreamOnFileEx(refstr, 0x1002, 0x80, 1, 0, p1) ){ return }
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	dupptr dp, WV2_DATA_SIZE * 20 + pTabInfo, WV2_DATA_SIZE * 4, 4
	WebView2_EventInit WV2_EVENT_CAPTURE, hWnd0, 0, dp
	ret = CCall2(dpCtrl(1), WV2_CapturePreview, 3, 0, p1, dp)
	WebView2_EventWait dp
	WebView2_Release p1
	dialog "Capture Sucsess", 1, "CMD_CAPTURE"
	return

*CMD_DOWNLOAD
	gosub *TAB_GETINFO
	if ( pTabInfo == 0 ){ return }
	if ( CCall2(dpCtrl(1), WV2_IsDownloadDialogOpen, 1, varptr(p1)) ){ return }
	if ( p1 ){ p1 = WV2_CloseDownloadDialog } else { p1 = WV2_OpenDownloadDialog }
	ret = CCall2(dpCtrl(1), p1, 0)
	return

*WM_SIZE
	GetClientRect hWnd0, varptr(rc)
	if ( IsWindowVisible(hEditUrl) ){
		MoveWindow hEditUrl, 8, 0, rc(2) - 16, 20, 0
		MoveWindow hTab, 0, 20, rc(2), 24, 0
		p1 = 44
	}
	else { p1 = 0 }
	gosub *TAB_GETINFO
	if ( pTabInfo ){
		WebView2_Size dpCtrl(0), 0, p1, rc(2), rc(3)
	}
	return

*WM_CLOSE
	sendmsg hTab, TCM_GETITEMCOUNT, 0, 0
	repeat stat
		iTab = cnt : gosub *TAB_DEL
	loop
	WebView2_Release pEnv
	if ( hMenu ){ DestroyMenu hMenu }
	return

*WM_NOTIFY
	if ( lparam == 0 ){ return }
	dupptr dpHdr, lparam, 12, 4
	if ( dpHdr(0) == hTab ){
		if ( dpHdr(2) == -552 ){
			sendmsg hTab, TCM_GETCURSEL, 0, 0
			if ( stat == -1 ){ return }
			iTab = stat : gosub *TAB_GETINFO2
			if ( pTabInfo == 0 ){ return }
			ret = CCall2(dpCtrl(0), WV2Ctrl_put_IsVisible, 1, 0)
		}
		if ( dpHdr(2) == -551 ){
			gosub *TAB_SELECT
			return
		}
		if ( dpHdr(2) == -5 ){
			dim tchi, 3
			GetCursorPos varptr(tchi)
			ScreenToClient hTab, varptr(tchi)
			sendmsg hTab, TCM_HITTEST, 0, varptr(tchi)
			if ( stat == -1 ){ return }
			iTab = stat : gosub *TAB_DEL
			return
		}
	}
	return

*WM_COMMAND
	if ( lparam == 0 && (wparam >> 16) == 0 ){
		id = wparam & 0xffff
		if ( id < 0x8000 || id >= (0x8000 + length(lbCmd)) ){ return }
		gosub lbCmd(id - 0x8000)
	}
	return

*Debug_Window
cls 4
title "DebugMode"
dialog "DebugMode"
dialog "OS名・系列・Version : " + sysinfo(0) + "\n実行中のユーザー名 : " + sysinfo(1) + "\nデバイス名 : " + sysinfo(2) + "\nプロセッサー数 : " + sysinfo(17) + "\n総メモリ数 : " + sysinfo(34) / 1024 + " KB" + "\n総利用可能メモリ数 : " + sysinfo(35) / 1024 + " KB" + "\nバッテリー残量 : "+peek (SYSTEM_POWER_STATUS.0, 2)+" %"
dialog ISVersion
dialog ISBuildNumber
dialog ISBuildDay
dialog codecomcal
dialog p1
dialog codeeh
dialog wv2_maxhdl
dialog bmscr
dialog rcmon
dialog rcwnd
dialog hfont
dialog dpctrl
dialog pdef
dialog DEF_URL
dialog WV2Env_CreateWV2Ctrl
dialog WV2Ctrl_put_IsVisible
dialog WV2Ctrl_put_Bounds
dialog WV2Ctrl_GetParent
dialog WV2_PrintToPdf
dialog WV2_IsDownloadDialogOpen
dialog WV2_OpenDownloadDialog
dialog WV2_CloseDownloadDialog
dialog WV2NewWnd_get_Uri
dialog WV2NewWnd_put_NewWindow
dialog WV2NewWnd_put_Handled
dialog WV2NewWnd_GetDeferral
dialog WV2Deferral_Complete
dialog WV2Ctrl_Close
dialog WV2Ctrl_get_CoreWebView2
dialog WV2_get_Source
dialog WV2_Navigate
dialog WM_SETFONT
dialog TCM_GETITEMCOUNT
dialog TCM_GETITEMA
dialog TCM_INSERTITEMA
dialog WV2_ExecuteScript
dialog WV2_CapturePreview
dialog WV2_Reload
dialog WV2_get_CanGoBack
dialog WV2_get_CanGoForward
dialog WV2_get_GoBack
dialog WV2_get_GoForward
dialog WV2_add_NewWindowRequested
dialog WV2_del_NewWindowRequested
dialog WV2_add_DocumentTitleChanged
dialog WV2_del_DocumentTitleChanged
dialog WV2_get_DocumentTitle
dialog WV2_add_FullScrChanged
dialog TCM_DELETEITEM
dialog TCM_GETCURSEL
dialog TCM_SETCURSEL
dialog TCM_HITTEST
dialog TCM_SETITEMW
dialog TCM_INSERTITEMW
dialog WV2_add_NavigationCompleted
dialog WV2_del_NavigationCompleted
dialog WV2_del_FullScrChanged
dialog WV2_GetFullScreen
dialog WV2_OpenTaskManagerWindow
dialog "DebugMode/"
cls 0
title "InternetStroller WebView Version : "+ISVersion+" - Sucsess"
return

//ここから互換性モード
*CMD_Compatible
exist dirinfo(1) + "\\Compatible.exe"
if strsize = -1 {
	dialog "Compatible.exe Not found"
	stop
}
exec dirinfo(1) + "\\Compatible.exe"
dialog "Compatible Sucsess", 1, "Compatible Window - IS"
return

//閉じるときの処理
*ISWindowExit
title "InternetStroller WebView Version : "+ISVersion+" - ISWindowExit"
end